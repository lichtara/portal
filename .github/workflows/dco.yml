name: DCO

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read

jobs:
  dco-check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Verify DCO sign-offs
        shell: bash
        run: |
          set -euo pipefail
          echo "Checking DCO sign-offs for commits in this PR"
          BASE_SHA="$(jq -r '.pull_request.base.sha' < "$GITHUB_EVENT_PATH")"
          HEAD_SHA="$(jq -r '.pull_request.head.sha' < "$GITHUB_EVENT_PATH")"
          echo "Range: ${BASE_SHA}..${HEAD_SHA}"
          missing=0
          # Split each commit into a file-like block for parsing
          git log --no-merges --format='%H%n%an <%ae>%n%B%n---END---' "${BASE_SHA}..${HEAD_SHA}" \
            | awk 'BEGIN{RS="---END---\n"} NF {print > "/tmp/commit." NR}'
          for f in /tmp/commit.*; do
            sha=$(sed -n '1p' "$f")
            author=$(sed -n '2p' "$f")
            if ! grep -qiE '^Signed-off-by: .+ <.+@.+>$' "$f"; then
              echo "::error title=DCO missing::Commit ${sha} by ${author} lacks a Signed-off-by line"
              missing=1
              continue
            fi
            # Optional: warn if author email doesn't appear in any sign-off
            auth_email=$(printf '%s' "$author" | sed -E 's/^.*<([^>]+)>.*/\1/')
            if ! grep -qiE "^Signed-off-by: .+ <${auth_email}>$" "$f"; then
              echo "::warning title=DCO author mismatch::Commit ${sha} sign-off email differs from author (${author})"
            fi
          done
          test "$missing" -eq 0 || { echo "DCO check failed"; exit 1; }


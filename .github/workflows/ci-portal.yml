name: CI Portal
on: [push, pull_request]
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SENTRY_ORG: lichtara
      SENTRY_PROJECT: app-web
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_RELEASE: ${{ github.sha }}
      VITE_SENTRY_RELEASE: ${{ github.sha }}
      SENTRY_API_BASE: ${{ vars.SENTRY_API_BASE || 'https://de.sentry.io/api/0' }}
    steps:
      - uses: actions/checkout@v4
      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Clean legacy npm proxy configs
        run: |
          npm config delete http-proxy || true
          npm config delete proxy || true
          npm config delete https-proxy || true
      - name: Install deps (app-web)
        run: npm ci -w apps/app-web
      - name: Install deps (syntaris-harmony)
        run: npm ci -w services/syntaris-harmony
      - name: Copy portal docs into app content
        run: |
          mkdir -p apps/app-web/content/core
          rsync -a --prune-empty-dirs \
            --include 'agents/***' \
            --include 'mandala-*.md' \
            --exclude '*' \
            docs/ apps/app-web/content/core/ || true
      - name: Lint (app-web)
        run: npm run lint -w apps/app-web
      - name: Test (app-web)
        run: npm run test -w apps/app-web
      - name: Build (app-web)
        run: npm run build -w apps/app-web
      - name: Verify Sentry release (best-effort)
        if: env.SENTRY_AUTH_TOKEN != ''
        run: |
          set -e
          echo "Checking release ${SENTRY_RELEASE} in org ${SENTRY_ORG} project ${SENTRY_PROJECT}"
          curl -sf \
            -H "Authorization: Bearer ${SENTRY_AUTH_TOKEN}" \
            "${SENTRY_API_BASE}/organizations/${SENTRY_ORG}/releases/${SENTRY_RELEASE}/" \
            | jq '.version, .projects[0].slug' || echo "Release not found yet (may be async)"
      - name: Audit dependencies (npm audit)
        run: npm audit --workspace apps/app-web || true
      - name: License report
        run: npx --yes license-checker --production --summary || true
      - name: Pull core docs (optional)
        env:
          CORE_REPO: ${{ vars.CORE_REPO }}
        run: |
          CORE_REPO="${CORE_REPO:-https://github.com/lichtara/core}"
          echo "Syncing core docs from ${CORE_REPO}"
          git clone --depth=1 "$CORE_REPO" tmp-core || exit 0
          mkdir -p apps/app-web/content/core
          rsync -a tmp-core/docs/ apps/app-web/content/core/ || true
      - run: echo "lint/test placeholders"
      - name: Upload core content artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-content
          path: |
            apps/app-web/content/core

apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  labels:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/part-of: lichtara
data:
  config.river: |
    // ===== Traces (OTLP) → Grafana Cloud Tempo =====
    otelcol.receiver.otlp "in" {
      http { endpoint = "0.0.0.0:4318" }
      grpc { endpoint = "0.0.0.0:4317" }
      output {
        traces = [otelcol.processor.batch.default.input]
      }
    }

    otelcol.processor.batch "default" {
      output {
        traces = [otelcol.exporter.otlp.tempo.input]
      }
    }

    otelcol.exporter.otlp "tempo" {
      // PrivateLink (Tempo) via OTLP/HTTP with Basic Auth
      // Expect envs provided via Secret `grafana-cloud`:
      // - GRAFANA_CLOUD_TEMPO_HTTP: e.g. https://tempo-...vpce.grafana.net/v1/traces
      // - GRAFANA_CLOUD_TEMPO_B64: base64("<user>:<token>") with Traces:Write
      client {
        endpoint = env("GRAFANA_CLOUD_TEMPO_HTTP")
        headers  = { "Authorization" = concat("Basic ", env("GRAFANA_CLOUD_TEMPO_B64")) }
      }
    }

    // ===== Metrics (Prometheus scrape) → Grafana Cloud Prometheus =====
    discovery.kubernetes "endpoints" {
      role = "endpoints"
      selectors {
        role  = "endpoints"
        label = "app.kubernetes.io/part-of=lichtara"
      }
    }

    prometheus.remote_write "grafana" {
      endpoint {
        url = env("GRAFANA_CLOUD_PROM_URL")
        basic_auth {
          username = env("GRAFANA_CLOUD_PROM_USER")
          password = env("GRAFANA_CLOUD_PROM_PASS")
        }
      }
      external_labels = { cluster = env("CLUSTER_NAME") }
    }

    prometheus.scrape "k8s_services" {
      job_name        = "k8s-services"
      scrape_interval = "30s"
      targets         = discovery.kubernetes.endpoints.targets
      forward_to      = [prometheus.remote_write.grafana.receiver]
      relabel_rules = <<-EOT
        # Keep only port named "http"
        - action: keep
          source_labels: [__meta_kubernetes_endpoint_port_name]
          regex: http
        # Force /metrics path
        - action: replace
          target_label: __metrics_path__
          replacement: /metrics
        # Labels for service discovery context
        - action: replace
          source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - action: replace
          source_labels: [__meta_kubernetes_service_name]
          target_label: k8s_service
        - action: replace
          source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
          target_label: k8s_app
        - action: replace
          source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        # Keep only our app family
        - action: keep
          source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_part_of]
          regex: lichtara
      EOT
    }
